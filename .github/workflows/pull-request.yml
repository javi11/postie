name: Build

on:
  pull_request:
    branches:
      - "main"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    if: ${{ !contains(github.event.head_commit.message, 'docs:') }}
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/test
  build-cli-test:
    if: ${{ !contains(github.event.head_commit.message, 'docs:') }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Branch
        id: branch
        uses: transferwise/sanitize-branch-name@v1

      # build CLI snapshot
      - name: Build CLI snapshot
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --snapshot --clean --config .goreleaser-cli.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ steps.branch.outputs.sanitized-branch-name }}

      - name: Upload CLI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-snapshot
          path: dist/*

  build-gui-test:
    if: ${{ !contains(github.event.head_commit.message, 'docs:') }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install Wails (version from wails.json)
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # Install Bun
      - name: Install Bun
        run: npm install -g bun

      # Test build GUI for Windows
      - name: Build GUI test - Windows
        run: wails build -platform windows/amd64
        env:
          CGO_ENABLED: 1

      # Test build GUI for macOS Intel
      - name: Build GUI test - macOS Intel
        run: wails build -platform darwin/amd64
        env:
          CGO_ENABLED: 1

      # Test build GUI for macOS ARM64
      - name: Build GUI test - macOS ARM64
        run: wails build -platform darwin/arm64
        env:
          CGO_ENABLED: 1

      - name: Upload GUI test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gui-test
          path: build/bin/*

  build-server-test:
    if: ${{ !contains(github.event.head_commit.message, 'docs:') || github.event.pull_request.head.repo.fork == false }}
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Branch
        id: branch
        uses: transferwise/sanitize-branch-name@v1

      # build server snapshot (Linux only for testing)
      - name: Build server snapshot
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --snapshot --clean --config .gorelease-dev.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ steps.branch.outputs.sanitized-branch-name }}

      - name: Upload server artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-snapshot
          path: dist/*linux*
